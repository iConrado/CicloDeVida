// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "alignItems": "flex-start",
        "justifyContent": "space-between",
        "paddingBottom": 20,
        "paddingHorizontal": 10,
        "paddingTop": 5,
      }
    }
    style={
      Object {
        "flexShrink": 1,
      }
    }
  >
    <View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#000",
                "flex": 1,
                "height": "100%",
                "justifyContent": "center",
                "opacity": 0.8,
                "position": "absolute",
                "width": "100%",
                "zIndex": 1,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "#FFF",
                "borderRadius": 10,
                "justifyContent": "center",
                "paddingHorizontal": 5,
                "paddingVertical": 10,
                "position": "absolute",
                "width": "80%",
                "zIndex": 2,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "alignSelf": "center",
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "marginBottom": 5,
                }
              }
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 14,
                  "marginBottom": 5,
                }
              }
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 14,
                }
              }
            />
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "backgroundColor": "#5C86F5",
                  "borderRadius": 2,
                  "elevation": 4,
                  "marginTop": 10,
                  "minWidth": "30%",
                  "opacity": 1,
                  "paddingVertical": 4,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#FFF",
                    "fontSize": 16,
                    "fontWeight": "bold",
                    "marginHorizontal": 5,
                  }
                }
              >
                OK
              </Text>
            </View>
          </View>
        </View>
      </Modal>
      <View
        style={
          Object {
            "alignItems": "center",
            "marginBottom": 5,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#14567A",
              "fontSize": 20,
              "fontWeight": "bold",
              "textAlign": "center",
            }
          }
        >
          Dados b√°sicos
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "column",
            "justifyContent": "space-between",
            "marginBottom": 8,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#666",
            }
          }
        >
          Nome completo:
        </Text>
        <TextInput
          allowFontScaling={true}
          autoCapitalize="characters"
          autoCorrect={false}
          maxLength={50}
          onChangeText={[Function]}
          selectTextOnFocus={true}
          style={
            Object {
              "borderColor": "#C1C1C1",
              "borderRadius": 5,
              "borderWidth": 1,
              "height": 40,
              "paddingHorizontal": 5,
              "width": "100%",
            }
          }
          underlineColorAndroid="#EAEAEA"
          value="BRUNO P. SIQUEIRA"
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "column",
            "justifyContent": "space-between",
            "marginBottom": 8,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#666",
            }
          }
        >
          E-mail:
        </Text>
        <TextInput
          allowFontScaling={true}
          autoCorrect={false}
          keyboardType="email-address"
          maxLength={40}
          onChangeText={[Function]}
          style={
            Object {
              "borderColor": "#C1C1C1",
              "borderRadius": 5,
              "borderWidth": 1,
              "height": 40,
              "paddingHorizontal": 5,
              "width": "100%",
            }
          }
          underlineColorAndroid="#EAEAEA"
          value="brunop@gmail.com"
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "column",
            "justifyContent": "space-between",
            "marginBottom": 8,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "width": "50%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#666",
                }
              }
            >
              Data Nasc.:
            </Text>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "width": 142,
                  },
                  Object {
                    "width": "85%",
                  },
                ]
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 40,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderColor": "#aaa",
                        "borderWidth": 1,
                        "flex": 1,
                        "height": 40,
                        "justifyContent": "center",
                      },
                      Object {
                        "marginLeft": 0,
                      },
                      false,
                      false,
                    ]
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "#333",
                        },
                        undefined,
                      ]
                    }
                  >
                    01/01/1980
                  </Text>
                </View>
                <Modal
                  animationType="none"
                  hardwareAccelerated={false}
                  onRequestClose={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "portrait-upside-down",
                      "landscape",
                      "landscape-left",
                      "landscape-right",
                    ]
                  }
                  transparent={true}
                  visible={false}
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      accessibilityComponentType={undefined}
                      accessibilityLabel={undefined}
                      accessibilityTraits={undefined}
                      accessible={true}
                      hasTVPreferredFocus={undefined}
                      hitSlop={undefined}
                      isTVSelectable={true}
                      nativeID={undefined}
                      onLayout={undefined}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "flex-end",
                          "backgroundColor": "#00000077",
                          "flex": 1,
                          "flexDirection": "row",
                        }
                      }
                      testID={undefined}
                      tvParallaxProperties={undefined}
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <View
                          collapsable={undefined}
                          style={
                            Object {
                              "backgroundColor": "#fff",
                              "height": 0,
                              "overflow": "hidden",
                            }
                          }
                        >
                          <View
                            pointerEvents="auto"
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "borderTopColor": "#ccc",
                                    "borderTopWidth": 1,
                                    "marginTop": 42,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <RCTDatePicker
                                date={315543600000}
                                locale={undefined}
                                maximumDate={2556064800000}
                                minimumDate={-2208981600000}
                                minuteInterval={undefined}
                                mode="date"
                                onChange={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "height": 216,
                                  }
                                }
                                timeZoneOffsetInMinutes={undefined}
                              />
                            </View>
                          </View>
                          <View
                            accessibilityComponentType={undefined}
                            accessibilityLabel={undefined}
                            accessibilityTraits={undefined}
                            accessible={true}
                            hasTVPreferredFocus={undefined}
                            hitSlop={undefined}
                            isTVSelectable={true}
                            nativeID={undefined}
                            onLayout={undefined}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "height": 42,
                                  "justifyContent": "center",
                                  "padding": 20,
                                  "position": "absolute",
                                  "top": 0,
                                },
                                Object {
                                  "left": 0,
                                },
                                undefined,
                              ]
                            }
                            testID={undefined}
                            tvParallaxProperties={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                Array [
                                  Object {
                                    "color": "#46cf98",
                                    "fontSize": 16,
                                  },
                                  Object {
                                    "color": "#666",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              Cancelar
                            </Text>
                          </View>
                          <View
                            accessibilityComponentType={undefined}
                            accessibilityLabel={undefined}
                            accessibilityTraits={undefined}
                            accessible={true}
                            hasTVPreferredFocus={undefined}
                            hitSlop={undefined}
                            isTVSelectable={true}
                            nativeID={undefined}
                            onLayout={undefined}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "height": 42,
                                  "justifyContent": "center",
                                  "padding": 20,
                                  "position": "absolute",
                                  "top": 0,
                                },
                                Object {
                                  "right": 0,
                                },
                                undefined,
                              ]
                            }
                            testID={undefined}
                            tvParallaxProperties={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                Array [
                                  Object {
                                    "color": "#46cf98",
                                    "fontSize": 16,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              Ok
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "width": "50%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#666",
                }
              }
            >
              Estado Civil:
            </Text>
            <View
              style={
                Object {
                  "borderColor": "#C1C1C1",
                  "borderRadius": 5,
                  "borderWidth": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 38,
                    "width": "100%",
                  }
                }
              >
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "Solteiro",
                        "textColor": undefined,
                        "value": 1,
                      },
                      Object {
                        "label": "Casado/Uni√£o Est√°vel",
                        "textColor": undefined,
                        "value": 2,
                      },
                      Object {
                        "label": "Divorciado",
                        "textColor": undefined,
                        "value": 3,
                      },
                      Object {
                        "label": "Vi√∫vo",
                        "textColor": undefined,
                        "value": 4,
                      },
                      Object {
                        "label": "Separado",
                        "textColor": undefined,
                        "value": 5,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={1}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      Object {
                        "color": "#5E5E5E",
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "column",
            "justifyContent": "space-between",
            "marginBottom": 8,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#666",
            }
          }
        >
          Filhos:
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "100%",
            }
          }
        >
          <View
            animationType="timing"
            onLayout={[Function]}
            onSlidingComplete={[Function]}
            onValueChange={[Function]}
            step={1}
            style={
              Array [
                Object {
                  "height": 40,
                  "justifyContent": "center",
                },
                Object {
                  "height": 40,
                  "width": "80%",
                },
              ]
            }
            thumbTouchSize={
              Object {
                "height": 40,
                "width": 40,
              }
            }
            value={1}
          >
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  undefined,
                ]
              }
            />
            <View
              collapsable={undefined}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#14567A",
                  "borderRadius": 2,
                  "height": 4,
                  "opacity": 0,
                  "position": "absolute",
                  "width": 0,
                }
              }
            />
            <View
              collapsable={undefined}
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#14567A",
                  "borderRadius": 10,
                  "height": 20,
                  "opacity": 0,
                  "position": "absolute",
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateY": 0,
                    },
                  ],
                  "width": 20,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "center",
                "textAlign": "center",
                "textAlignVertical": "center",
                "width": "20%",
              }
            }
          >
            1
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "column",
            "justifyContent": "space-between",
            "marginBottom": 8,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#666",
            }
          }
        >
          In√≠cio da carreira:
        </Text>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "width": 142,
              },
              Object {
                "width": "42.5%",
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#aaa",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                    "justifyContent": "center",
                  },
                  Object {
                    "marginLeft": 0,
                  },
                  false,
                  false,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#333",
                    },
                    undefined,
                  ]
                }
              >
                05/06/2000
              </Text>
            </View>
            <Modal
              animationType="none"
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "backgroundColor": "#00000077",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    hasTVPreferredFocus={undefined}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    nativeID={undefined}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <View
                      collapsable={undefined}
                      style={
                        Object {
                          "backgroundColor": "#fff",
                          "height": 0,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        pointerEvents="auto"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "borderTopColor": "#ccc",
                                "borderTopWidth": 1,
                                "marginTop": 42,
                              },
                              undefined,
                            ]
                          }
                        >
                          <RCTDatePicker
                            date={960174000000}
                            locale={undefined}
                            maximumDate={2556064800000}
                            minimumDate={-2208981600000}
                            minuteInterval={undefined}
                            mode="date"
                            onChange={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "height": 216,
                              }
                            }
                            timeZoneOffsetInMinutes={undefined}
                          />
                        </View>
                      </View>
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "height": 42,
                              "justifyContent": "center",
                              "padding": 20,
                              "position": "absolute",
                              "top": 0,
                            },
                            Object {
                              "left": 0,
                            },
                            undefined,
                          ]
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          ellipsizeMode="tail"
                          style={
                            Array [
                              Object {
                                "color": "#46cf98",
                                "fontSize": 16,
                              },
                              Object {
                                "color": "#666",
                              },
                              undefined,
                            ]
                          }
                        >
                          Cancelar
                        </Text>
                      </View>
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "height": 42,
                              "justifyContent": "center",
                              "padding": 20,
                              "position": "absolute",
                              "top": 0,
                            },
                            Object {
                              "right": 0,
                            },
                            undefined,
                          ]
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          ellipsizeMode="tail"
                          style={
                            Array [
                              Object {
                                "color": "#46cf98",
                                "fontSize": 16,
                              },
                              undefined,
                            ]
                          }
                        >
                          Ok
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "column",
            "justifyContent": "space-between",
            "marginBottom": 8,
            "width": "100%",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#666",
            }
          }
        >
          Sal√°rio L√≠quido:
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "100%",
            }
          }
        >
          <View
            animationType="timing"
            onLayout={[Function]}
            onValueChange={[Function]}
            step={100}
            style={
              Array [
                Object {
                  "height": 40,
                  "justifyContent": "center",
                },
                Object {
                  "height": 40,
                  "width": "80%",
                },
              ]
            }
            thumbTouchSize={
              Object {
                "height": 40,
                "width": 40,
              }
            }
            value={8550}
          >
            <View
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "#b3b3b3",
                  },
                  Object {
                    "borderRadius": 2,
                    "height": 4,
                  },
                  undefined,
                ]
              }
            />
            <View
              collapsable={undefined}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#14567A",
                  "borderRadius": 2,
                  "height": 4,
                  "opacity": 0,
                  "position": "absolute",
                  "width": 0,
                }
              }
            />
            <View
              collapsable={undefined}
              onLayout={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Object {
                  "backgroundColor": "#14567A",
                  "borderRadius": 10,
                  "height": 20,
                  "opacity": 0,
                  "position": "absolute",
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateY": 0,
                    },
                  ],
                  "width": 20,
                }
              }
            />
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              renderToHardwareTextureAndroid={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {},
                ]
              }
            />
          </View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "center",
                "textAlign": "center",
                "textAlignVertical": "center",
                "width": "20%",
              }
            }
          >
            R$ 8.550
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderTopColor": "#D0D0D0",
        "borderTopWidth": 1,
        "flexDirection": "row",
        "height": 60,
        "marginTop": 0,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 6,
          "flexDirection": "row",
          "paddingHorizontal": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 7,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#666",
              "fontWeight": "bold",
              "textAlign": "center",
            }
          }
        >
          Comprometimento de renda atual:
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 3,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#666",
              "fontWeight": "bold",
              "textAlign": "center",
            }
          }
        >
          0
          %
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 4,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#5C86F5",
            "borderRadius": 2,
            "elevation": 4,
            "height": 35,
            "justifyContent": "center",
            "maxWidth": "90%",
            "minWidth": "80%",
            "opacity": 1,
            "paddingVertical": 4,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#FFF",
              "fontSize": 14,
              "fontWeight": "bold",
              "marginHorizontal": 5,
            }
          }
        >
          PR√ìXIMA ETAPA
        </Text>
      </View>
    </View>
  </View>
</View>
`;
